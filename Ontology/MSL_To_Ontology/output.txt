namedIndividual('#M2075').
namedIndividual('#M2075Processor').
namedIndividual('#block').
namedIndividual('#core').
namedIndividual('#die').
namedIndividual('#grid').
namedIndividual('#sm').
namedIndividual('#tpc').
namedIndividual('#warp').
namedIndividual('#M2075globalMem').
namedIndividual('#L1').
namedIndividual('#L2').
namedIndividual('#M2075constantMem').
namedIndividual('#cL1').
namedIndividual('#cL2').
namedIndividual('#M2075readonlyMem').
namedIndividual('#M2075sharedMem').
namedIndividual('#tL1').
namedIndividual('#M2075textureMem_A').
namedIndividual('#M2075textureMem_B').
namedIndividual('#M2075textureMem_C').
namedIndividual('#M2075textureMem_D').
propertyAssertion('#consistsOf','#M2075','#M2075Processor').
propertyAssertion('#numberOfDiesValue','#M2075Processor',literal(type('http://www.w3.org/2001/XMLSchema#integer','1'))).
propertyAssertion('#TPCPerDie','#M2075Processor',literal(type('http://www.w3.org/2001/XMLSchema#integer','16'))).
propertyAssertion('#SMPerTPC','#M2075Processor',literal(type('http://www.w3.org/2001/XMLSchema#integer','1'))).
propertyAssertion('#CoresPerSM','#M2075Processor',literal(type('http://www.w3.org/2001/XMLSchema#integer','32'))).
propertyAssertion('#membus','#M2075Processor',literal(type('http://www.w3.org/2001/XMLSchema#integer','48'))).
propertyAssertion('#consistsOf','#M2075','#M2075globalMem').
propertyAssertion('#hasID','#M2075globalMem',literal(type('http://www.w3.org/2001/XMLSchema#integer','8'))).
propertyAssertion('#softwareManageable','#M2075globalMem',literal(type('http://www.w3.org/2001/XMLSchema#boolean','true'))).
propertyAssertion('#accessible','#M2075globalMem',literal(rw)).
propertyAssertion('#hasSizeValue','#M2075globalMem',literal('5375M')).
propertyAssertion('#hasBlockSizeValue','#M2075globalMem',literal('128B')).
propertyAssertion('#threadsGroup','#M2075globalMem',literal(type('http://www.w3.org/2001/XMLSchema#integer','32'))).
propertyAssertion('#hasLatencyValue','#M2075globalMem',literal('600clk')).
propertyAssertion('#hasUpperLevel','#M2075globalMem','#L2').
propertyAssertion('#hasUpperLevel','#L2','#L1').
propertyAssertion('#shareScope','#M2075globalMem','#die').
propertyAssertion('#pieces','#M2075globalMem',literal(type('http://www.w3.org/2001/XMLSchema#integer','1'))).
propertyAssertion('#concurrencyFactor','#M2075globalMem',literal('<0.1 0.5>')).
propertyAssertion('#consistsOf','#M2075','#L1').
propertyAssertion('#hasID','#L1',literal(type('http://www.w3.org/2001/XMLSchema#integer','9'))).
propertyAssertion('#softwareManageable','#L1',literal(type('http://www.w3.org/2001/XMLSchema#boolean','false'))).
propertyAssertion('#accessible','#L1',literal(rw)).
propertyAssertion('#hasSizeValue','#L1',literal('16K')).
propertyAssertion('#hasBlockSizeValue','#L1',literal('128B')).
propertyAssertion('#threadsGroup','#L1',literal(type('http://www.w3.org/2001/XMLSchema#integer','32'))).
propertyAssertion('#hasLatencyValue','#L1',literal('80clk')).
propertyAssertion('#hasLowerLevel','#L1','#L2').
propertyAssertion('#hasLowerLevel','#L2','#globalMem').
propertyAssertion('#shareScope','#L1','#sm').
propertyAssertion('#pieces','#L1',literal(type('http://www.w3.org/2001/XMLSchema#integer','1'))).
propertyAssertion('#consistsOf','#M2075','#L2').
propertyAssertion('#hasID','#L2',literal(type('http://www.w3.org/2001/XMLSchema#integer','7'))).
propertyAssertion('#softwareManageable','#L2',literal(type('http://www.w3.org/2001/XMLSchema#boolean','false'))).
propertyAssertion('#accessible','#L2',literal(rw)).
propertyAssertion('#hasSizeValue','#L2',literal('768K')).
propertyAssertion('#hasBlockSizeValue','#L2',literal('32B')).
propertyAssertion('#threadsGroup','#L2',literal(type('http://www.w3.org/2001/XMLSchema#integer','<32|4>'))).
propertyAssertion('#hasLatencyValue','#L2',literal('390clk')).
propertyAssertion('#shareScope','#L2','#die').
propertyAssertion('#pieces','#L2',literal(type('http://www.w3.org/2001/XMLSchema#integer','2'))).
propertyAssertion('#consistsOf','#M2075','#M2075constantMem').
propertyAssertion('#hasID','#M2075constantMem',literal(type('http://www.w3.org/2001/XMLSchema#integer','1'))).
propertyAssertion('#softwareManageable','#M2075constantMem',literal(type('http://www.w3.org/2001/XMLSchema#boolean','true'))).
propertyAssertion('#accessible','#M2075constantMem',literal(r)).
propertyAssertion('#hasSizeValue','#M2075constantMem',literal('64K')).
propertyAssertion('#threadsGroup','#M2075constantMem',literal(type('http://www.w3.org/2001/XMLSchema#integer','32'))).
propertyAssertion('#hasLatencyValue','#M2075constantMem',literal('360clk')).
propertyAssertion('#hasUpperLevel','#M2075constantMem','#cL2').
propertyAssertion('#hasUpperLevel','#cL2','#cL1').
propertyAssertion('#shareScope','#M2075constantMem','#die').
propertyAssertion('#pieces','#M2075constantMem',literal(type('http://www.w3.org/2001/XMLSchema#integer','1'))).
propertyAssertion('#consistsOf','#M2075','#cL1').
propertyAssertion('#hasID','#cL1',literal(type('http://www.w3.org/2001/XMLSchema#integer','3'))).
propertyAssertion('#softwareManageable','#cL1',literal(type('http://www.w3.org/2001/XMLSchema#boolean','false'))).
propertyAssertion('#accessible','#cL1',literal(r)).
propertyAssertion('#hasSizeValue','#cL1',literal('4K')).
propertyAssertion('#hasBlockSizeValue','#cL1',literal('64B')).
propertyAssertion('#threadsGroup','#cL1',literal(type('http://www.w3.org/2001/XMLSchema#integer','32'))).
propertyAssertion('#hasLatencyValue','#cL1',literal('48clk')).
propertyAssertion('#hasLowerLevel','#cL1','#cL2').
propertyAssertion('#hasLowerLevel','#cL2','#constantMem').
propertyAssertion('#shareScope','#cL1','#sm').
propertyAssertion('#pieces','#cL1',literal(type('http://www.w3.org/2001/XMLSchema#integer','1'))).
propertyAssertion('#consistsOf','#M2075','#cL2').
propertyAssertion('#hasID','#cL2',literal(type('http://www.w3.org/2001/XMLSchema#integer','2'))).
propertyAssertion('#softwareManageable','#cL2',literal(type('http://www.w3.org/2001/XMLSchema#boolean','false'))).
propertyAssertion('#accessible','#cL2',literal(r)).
propertyAssertion('#hasSizeValue','#cL2',literal('32K')).
propertyAssertion('#hasBlockSizeValue','#cL2',literal('256B')).
propertyAssertion('#threadsGroup','#cL2',literal(type('http://www.w3.org/2001/XMLSchema#integer','32'))).
propertyAssertion('#hasLatencyValue','#cL2',literal('140clk')).
propertyAssertion('#hasUpperLevel','#cL2','#cL1').
propertyAssertion('#hasLowerLevel','#cL2','#constantMem').
propertyAssertion('#shareScope','#cL2','#die').
propertyAssertion('#pieces','#cL2',literal(type('http://www.w3.org/2001/XMLSchema#integer','1'))).
propertyAssertion('#consistsOf','#M2075','#M2075readonlyMem').
propertyAssertion('#hasID','#M2075readonlyMem',literal(type('http://www.w3.org/2001/XMLSchema#integer','11'))).
propertyAssertion('#softwareManageable','#M2075readonlyMem',literal(type('http://www.w3.org/2001/XMLSchema#boolean','true'))).
propertyAssertion('#accessible','#M2075readonlyMem',literal(r)).
propertyAssertion('#hasSizeValue','#M2075readonlyMem',literal('5375M')).
propertyAssertion('#hasBlockSizeValue','#M2075readonlyMem',literal('32B')).
propertyAssertion('#threadsGroup','#M2075readonlyMem',literal(type('http://www.w3.org/2001/XMLSchema#integer','32'))).
propertyAssertion('#hasLatencyValue','#M2075readonlyMem',literal('617clk')).
propertyAssertion('#hasUpperLevel','#M2075readonlyMem','#L2').
propertyAssertion('#hasUpperLevel','#L2','#tL1').
propertyAssertion('#shareScope','#M2075readonlyMem','#die').
propertyAssertion('#pieces','#M2075readonlyMem',literal(type('http://www.w3.org/2001/XMLSchema#integer','1'))).
propertyAssertion('#concurrencyFactor','#M2075readonlyMem',literal('<0.1 0.5>')).
propertyAssertion('#consistsOf','#M2075','#M2075sharedMem').
propertyAssertion('#hasID','#M2075sharedMem',literal(type('http://www.w3.org/2001/XMLSchema#integer','4'))).
propertyAssertion('#softwareManageable','#M2075sharedMem',literal(type('http://www.w3.org/2001/XMLSchema#boolean','true'))).
propertyAssertion('#accessible','#M2075sharedMem',literal(rw)).
propertyAssertion('#hasSizeValue','#M2075sharedMem',literal('48K')).
propertyAssertion('#threadsGroup','#M2075sharedMem',literal(type('http://www.w3.org/2001/XMLSchema#integer','32'))).
propertyAssertion('#banks','#M2075sharedMem',literal(type('http://www.w3.org/2001/XMLSchema#integer','32'))).
propertyAssertion('#hasLatencyValue','#M2075sharedMem',literal('48clk')).
propertyAssertion('#shareScope','#M2075sharedMem','#sm').
propertyAssertion('#pieces','#M2075sharedMem',literal(type('http://www.w3.org/2001/XMLSchema#integer','1'))).
propertyAssertion('#consistsOf','#M2075','#tL1').
propertyAssertion('#hasID','#tL1',literal(type('http://www.w3.org/2001/XMLSchema#integer','6'))).
propertyAssertion('#softwareManageable','#tL1',literal(type('http://www.w3.org/2001/XMLSchema#boolean','false'))).
propertyAssertion('#accessible','#tL1',literal(r)).
propertyAssertion('#hasSizeValue','#tL1',literal('12K')).
propertyAssertion('#hasBlockSizeValue','#tL1',literal('<32B 4>')).
propertyAssertion('#threadsGroup','#tL1',literal(type('http://www.w3.org/2001/XMLSchema#integer','4'))).
propertyAssertion('#hasLatencyValue','#tL1',literal('208clk')).
propertyAssertion('#hasLowerLevel','#tL1','#L2').
propertyAssertion('#hasLowerLevel','#L2','#textureMem').
propertyAssertion('#shareScope','#tL1','#sm').
propertyAssertion('#pieces','#tL1',literal(type('http://www.w3.org/2001/XMLSchema#integer','1'))).
propertyAssertion('#consistsOf','#M2075','#M2075textureMem_A').
propertyAssertion('#hasID','#M2075textureMem_A',literal(type('http://www.w3.org/2001/XMLSchema#integer','5'))).
propertyAssertion('#softwareManageable','#M2075textureMem_A',literal(type('http://www.w3.org/2001/XMLSchema#boolean','true'))).
propertyAssertion('#accessible','#M2075textureMem_A',literal(r)).
propertyAssertion('#hasSizeValue','#M2075textureMem_A',literal('5375M')).
propertyAssertion('#threadsGroup','#M2075textureMem_A',literal(type('http://www.w3.org/2001/XMLSchema#integer','4'))).
propertyAssertion('#hasLatencyValue','#M2075textureMem_A',literal('617clk')).
propertyAssertion('#hasUpperLevel','#M2075textureMem_A','#L2').
propertyAssertion('#hasUpperLevel','#L2','#tL1').
propertyAssertion('#shareScope','#M2075textureMem_A','#die').
propertyAssertion('#pieces','#M2075textureMem_A',literal(type('http://www.w3.org/2001/XMLSchema#integer','1'))).
propertyAssertion('#concurrencyFactor','#M2075textureMem_A',literal('<0.1 0.5>')).
propertyAssertion('#consistsOf','#M2075','#M2075textureMem_B').
propertyAssertion('#hasID','#M2075textureMem_B',literal(type('http://www.w3.org/2001/XMLSchema#integer','5'))).
propertyAssertion('#hasDimension','#M2075textureMem_B',literal(type('http://www.w3.org/2001/XMLSchema#integer','1'))).
propertyAssertion('#hasSizeValue','#M2075textureMem_B',literal('128ME')).
propertyAssertion('#hasBlockSizeValue','#M2075textureMem_B',literal('32B')).
propertyAssertion('#consistsOf','#M2075','#M2075textureMem_C').
propertyAssertion('#hasID','#M2075textureMem_C',literal(type('http://www.w3.org/2001/XMLSchema#integer','5'))).
propertyAssertion('#hasDimension','#M2075textureMem_C',literal(type('http://www.w3.org/2001/XMLSchema#integer','2'))).
propertyAssertion('#hasSizeValue','#M2075textureMem_C',literal('<64KE 64KE>')).
propertyAssertion('#hasBlockSizeValue','#M2075textureMem_C',literal('<16B 2>')).
propertyAssertion('#consistsOf','#M2075','#M2075textureMem_D').
propertyAssertion('#hasID','#M2075textureMem_D',literal(type('http://www.w3.org/2001/XMLSchema#integer','5'))).
propertyAssertion('#hasDimension','#M2075textureMem_D',literal(type('http://www.w3.org/2001/XMLSchema#integer','2'))).
propertyAssertion('#hasSizeValue','#M2075textureMem_D',literal('<64KE 64KE>')).
propertyAssertion('#hasBlockSizeValue','#M2075textureMem_D',literal('<16B 2>')).
classAssertion('#Tesla','#M2075').
classAssertion('#Processor','#M2075Processor').
classAssertion('#scope','#block').
classAssertion('#scope','#core').
classAssertion('#scope','#die').
classAssertion('#scope','#grid').
classAssertion('#scope','#sm').
classAssertion('#scope','#tpc').
classAssertion('#scope','#warp').
classAssertion('#GlobalMemory','#M2075globalMem').
classAssertion('#Cache','#L1').
classAssertion('#Cache','#L2').
classAssertion('#ConstantMemory','#M2075constantMem').
classAssertion('#L1_constant','#cL1').
classAssertion('#L2_constant','#cL2').
classAssertion('#ReadOnlyMemory','#M2075readonlyMem').
classAssertion('#SharedMemory','#M2075sharedMem').
classAssertion('#L1_texture','#tL1').
classAssertion('#TextureMemory','#M2075textureMem_A').
classAssertion('#TextureMemory','#M2075textureMem_B').
classAssertion('#TextureMemory','#M2075textureMem_C').
classAssertion('#TextureMemory','#M2075textureMem_D').
